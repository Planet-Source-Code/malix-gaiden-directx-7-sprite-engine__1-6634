{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}
{\f28\froman\fcharset238\fprq2 Times New Roman CE;}{\f29\froman\fcharset204\fprq2 Times New Roman Cyr;}{\f31\froman\fcharset161\fprq2 Times New Roman Greek;}{\f32\froman\fcharset162\fprq2 Times New Roman Tur;}
{\f33\froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\f34\froman\fcharset178\fprq2 Times New Roman (Arabic);}{\f35\froman\fcharset186\fprq2 Times New Roman Baltic;}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;
\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;
\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{\ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \snext0 Normal;}{\*\cs10 \additive Default Paragraph Font;}}{\*\listtable
{\list\listtemplateid986064440\listsimple{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat0\levelspace0\levelindent0{\leveltext\'01*;}{\levelnumbers;}\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1 }{\listname ;}\listid-2}
}{\*\listoverridetable{\listoverride\listid-2\listoverridecount1{\lfolevel\listoverrideformat{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat0\levelold\levelspace0\levelindent0{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3
\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1\fbias0 }}\ls1}}{\info{\title The Use of The DirectX 7 Sprite Engine}{\author Anthony Whiteley}{\operator Anthony Whiteley}{\creatim\yr2000\mo3\dy16\hr14\min40}{\revtim\yr2000\mo3\dy16\hr14\min40}
{\version2}{\edmins0}{\nofpages5}{\nofwords1810}{\nofchars10319}{\*\company N/A}{\nofcharsws12672}{\vern8247}}\endnotes\aendnotes\aftnstart0\hyphhotz0\aftnnar\nospaceforul\lytprtmet\hyphcaps0\horzdoc\dghspace120\dgvspace120\dghorigin1701\dgvorigin1984
\dghshow1\dgvshow0\jexpand\viewkind4\viewscale95\pgbrdrhead\pgbrdrfoot\bdrrlswsix\nolnhtadjtbl\oldas \fet0\sectd \linex0\endnhere\sectdefaultcl {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang
{\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang{\pntxta )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang
{\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}\pard\plain 
\qc \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\fs24 The Use of The DirectX 7 Sprite Engine
\par }\pard \qc \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\fs24 by it's creator
\par Guy Malix
\par 
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\b\ul This is the table of contents thingy that tells you what is covered and in what order
\par {\pntext\pard\plain\f3\fs20 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \ql \fi-720\li720\ri0\widctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf3 {\pntxtb \'b7}}\nooverflow\faroman\ls1\rin0\lin720\itap0 {Initializing the Graphics Engine
\par {\pntext\pard\plain\f3\fs20 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \ql \fi-720\li720\ri0\widctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf3 {\pntxtb \'b7}}\nooverflow\faroman\ls1\rin0\lin720\itap0 {Structure of the Engine
\par {\pntext\pard\plain\f3\fs20 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \ql \fi-720\li720\ri0\widctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf3 {\pntxtb \'b7}}\nooverflow\faroman\ls1\rin0\lin720\itap0 {Properties of the background
\par {\pntext\pard\plain\f3\fs20 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \ql \fi-720\li720\ri0\widctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf3 {\pntxtb \'b7}}\nooverflow\faroman\ls1\rin0\lin720\itap0 {Initializing a background using by filename
\par {\pntext\pard\plain\f3\fs20 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \ql \fi-720\li720\ri0\widctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf3 {\pntxtb \'b7}}\nooverflow\faroman\ls1\rin0\lin720\itap0 {\tab Routine Calls
\par {\pntext\pard\plain\f3\fs20 \loch\af3\dbch\af0\hich\f3 \'b7\tab}Initializing a TileBackground
\par {\pntext\pard\plain\f3\fs20 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \ql \fi-720\li720\ri0\widctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf3 {\pntxtb \'b7}}\nooverflow\faroman\ls1\rin0\lin720\itap0 {How Things Work
\par {\pntext\pard\plain\f3\fs20 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \ql \fi-720\li720\ri0\widctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf3 {\pntxtb \'b7}}\nooverflow\faroman\ls1\rin0\lin720\itap0 {Properties of the Sprites
\par {\pntext\pard\plain\f3\fs20 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \ql \fi-720\li720\ri0\widctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf3 {\pntxtb \'b7}}\nooverflow\faroman\ls1\rin0\lin720\itap0 {Initializing Sprites
\par {\pntext\pard\plain\f3\fs20 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \ql \fi-720\li720\ri0\widctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf3 {\pntxtb \'b7}}\nooverflow\faroman\ls1\rin0\lin720\itap0 {\tab Routine Calls
\par {\pntext\pard\plain\f3\fs20 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \ql \fi-720\li720\ri0\widctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf3 {\pntxtb \'b7}}\nooverflow\faroman\ls1\rin0\lin720\itap0 {How to use the textground
\par {\pntext\pard\plain\f3\fs20 \loch\af3\dbch\af0\hich\f3 \'b7\tab}How to Use the TextWindow
\par }\pard \ql \fi-720\li720\ri0\widctlpar\nooverflow\faroman\rin0\lin720\itap0 {
\par }\pard \ql \fi-720\li720\ri0\widctlpar\nooverflow\faroman\rin0\lin720\itap0 {
\par }{\b Initializing the Graphics Engine
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\tab 
If you are using the provided sdk project then your practically already done.  Just look at the form's load code, and locate the line that says something similar to "SpriteEng.InitializeSystem 640,480" or something like that.  the two numbers are.. yup yo
u guessed it... the dimensions of the screen.  That's all you have to do to initialize the engine... however to use it is another story.
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\b Structure of the Engine
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\tab 
The engine is set into three backgrounds, 40 sprites, a text ground, a temp ground, and a text window ground.  Rendered in the following order, Back Ground, Sprites on background, Midground, sprites on midground, foreground, sprites on foreground, text wi
ndow, then text.  In easier understood terms it displays/renders everything from back to front.  Placing the things in the back first and placing the things in the front last.
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\b Properties of the Background
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\tab 
There are three backgrounds, the "Background", the "MidGround", and the "ForeGround".  Each of the grounds have information stored in an array defined as an overlay.  The data held within the overlay is as follows:
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\b 
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\i     ViewPortX 'Width of the viewing window
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\i     ViewPortY  'Height of the viewing window
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\i     CornerPosX  'the X of Where the viewing window is
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\i     CornerPosY  'the Y of Where the viewing window is
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\i     ViewingArea As RECT  'is set by the previous four points and is past in a command later
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\i     ToScreen As RECT 'Where on the screen to blt can be used to scale the background
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\i     width - width of the original bitmap
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\i     height- height of the origianl bitmap
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\i     visible As Boolean  - Tells whether or not it will be rendered when display screen is called.
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\b 
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\tab At the start, no backgrounds are initialized, but the overlay data is.  All three of the backgrounds start with an initial visible value of false. Meaning that t
hey are not displayed during the displayScreen routine.  Witch is good, because if visible was set to true without the background being set the engine would crash.}{\b 
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\b 
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\b Initializing a Background Using "by filename"
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\tab There are certain steps that I recomend when initializing a background and here is the procedure I use to initialize a background with this engine:
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\i \tab SpriteEng.SetBackGroundByFileName BackGroundNumber, Filename, filesizeX, filesizeY
\par \tab SpriteEng.SetBackgroundToScreen BackGroundNumber, left, top, right, bottom
\par \tab SpriteEng.SetBackGroundVisibility BackGroundNumber, True
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\i \tab SpriteEng.SetPortionBackGround BackGroundNumber, left, top, Corner
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\i \tab SpriteEng.SetPortionBackGround BackGroundNumber, width, height, View
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\i 
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\tab 
Those five steps will initialize a background... of you would have to put actual values into the place of everything.  I'm supposing you want me to tell you what goes where... well.. ok.
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\tab BackgroundNumber: This is either, "BackGround", "MidGround", or "ForeGround"
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\tab Filename: is the location of the bitmap without the ".bmp"
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\tab FileSizeX and Filesizey: hmm... duh? it's the size of the bitmap in pixels
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\i \tab -In the function SetBackGroundToScreen-
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\tab \tab left: the X coordinate closest to the left side of the screen
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\tab \tab top: the Y coordinate closest to the top of the screen
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\tab \tab right: the X coordinate closest to the right side of the screen
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\tab \tab bottom: the Y coordinate closest to the bottom of the screen
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\tab \tab }{\i An example:
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\i \tab \tab \tab SpriteEng.SetBackgroundToScreen 0, 0, CurResX, CurResY
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\i \tab -That example would set the bitmap to take up the whole screen
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\i \tab 
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {I think I'll stop there on the explanation.. I think whoever reads this will be able to figure out what the last two lines do.
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\b Routine Calls
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\tab This will be a list and a little description of what each function does that has to do with the 3 backgrounds.
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\i Sub SetBackGroundByFileName(backgroundnumber As Byte, BackGround As String, xwidth As Integer, ywidth As Integer)
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\i \tab -}{Creates the background by using the filename given under Background}{\i 
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\i Sub SetBackGround(backgroundnumber As Byte, Tilenumberx As Byte, Tilenumbery As Byte, Tile As Byte)
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\i \tab -}{Sets the tile number of tile x,y}{\i 
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\i Sub SetBackGroundTile(Tilenumber As Byte, Tile As DirectDrawSurface7)
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\i \tab -}{Sets the actual tile of given number}{\i 
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\i Sub SetPortionBackGround(backgroundnumber As Integer, newx As Integer, newy As Integer, vieworcorner As Byte)
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\i \tab }{-Sets either the corner or the width/height of the viewing area}{\i 
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\i Sub SetBackgroundToScreen(backgroundnumber As Byte, newx As Integer, newy As Integer, newwidth As Integer, newheight As Integer)
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\i \tab -}{Sets the ToScreen RECT}{\i 
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\i Sub SetBackGroundVisibility(backgroundnumber As Byte, visible As Boolean)
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\i \tab }{-Sets the visibility Flag}{\i 
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\i Sub SetBackGroundTileSize(newwidth As Integer, newheight As Integer)
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\tab -Sets the tile Size
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\i Sub InitBackground(backgroundnumber As Byte, xwidth As Integer, ywidth As Integer)
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\tab -Initializes a background without a file
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\i Sub ClearBackground(backgroundnumber As Byte)
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\tab -Clears backgroundnumber to black
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\tab The subs and procedures required to use a tiled background have not yet been explored and when explored this file will be updated.
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\i 
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\b Initializing Tile Backgorund
\par }\pard \qj \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\b \tab }{
You need to call a couple things to actually get the Tile Background to load and initialize.  And the following is a basic set of procedures that lets you set up a tile background.  You need to set the size of the tiles with SetTileDimensions.  Then you n
eed to load your tile set with the LoadTile function.  There are a total of fourty different background tiles that can be loaded at one time.  You load each one separately the function variables tell you wh
at needs to go in which place so no explanation is needed.  Next you need to initialize the background <note: this must be done or the program will crash!> using InitializeTileGround.  After wards you need to set the tiles on the background with the SetTi
le function; again I'd like to re-iderate that the variables within the function will tell what to put in the places.  Next you need to call DisplayTileGround.  Then you just call the same procedures used earlier; DisplayScreen and Flip.
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\b How Things Work
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\tab O
k.. So now you have a general idea of how to initialize the engine and create a background; and now you're getting a bit antsy and you want to know how to actually get a picture to appear on the screen.  Well... that's easy too.  All you have to do is cal
l the "}{\i SpriteEng.DisplayScreen"}{ function and/or the "}{\i SpriteEng.DisplayTileBackground".}{ The DisplayTileBackground function requires that you pass the backgroundnumber to it. So if the MidGround was tiled I would put "}{\i 
SpriteEng.DisplayTileBackground Midground".}{
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\tab 
I bet you're asking, but what if I have a tiled background and a non-tiled background?  Well, that's cool.  You can have both, you just have to call both commands.  Oh but wait you say.. does it matter the order in which I call them..  yes it does.  You m
ust call the DisplayTileBackground routine before you cal the DisplayScreen routine or the tile background will not be displayed.
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\tab But wait... hehe that's not all.  After you've called those commands to actually have it display something on the screen you must call the "}{\i SpriteEng.Flip"}{
 routine.  It simply flips whatever is on the backbuffer onto the screen.  <Note:  The backbuffer is where everything is drawn to before it is flipped">
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {hmm..... as of right now I can't seem to recall what the hell temp ground was for but I'm sure I had a purpose.  oh well.  
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\b Properties of a sprites
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\tab There are a current running total of 40 sprites in the engine; each sprite containing to it a set of variables. The data structure/variables held for each sprite are as follows:
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\i     xpos 'Sprite's Position on the screen X
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\i     ypos 'Sprite's Position on the screen Y
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\i     width 'Width of Sprite
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\i     height 'Height of Sprite
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\i     Frame 'The Current Frame of the Sprite
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\i     Orientation 'Oriention of Sprite
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\i     TransparentColor As Long 'the Transparent color
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\i     visible As Boolean 'Is it visible
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\i     effect  'number of the effect
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\i     Effected As Boolean 'is it effected
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\i     SpriteName As String 'Filename
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\i     SetGround 'What background is it displayed on
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\i     BoxSize As RECT 'size of blt from dest
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\i     DestBoxSize As RECT 'size of dest blt
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\i     BoundingBox As BaseBoundingBoxType 'Used for collision detection but not yet implemented.
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\i     ScaleWidth 'Scale width - can be used to enlarge or shrink sprite
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\i     ScaleHeigth 'Scale height - can be used to enlarge or shrink sprite
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\tab At the start there are no sprites initialized.  You have to do that your self.  That will be discussed in the next section.
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\b Initializing a sprite
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\b \tab }{There are only three things you have to do to initialize a sprite, and they are as follows:
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\i \tab }{\i\fs18 SpriteEng.SetSprite spritenumber, Effected, effect#, filename, width, height, whichGround, transparentcolor
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\i\fs18 \tab SpriteEng.SetSpriteVisibility spritenumber, True
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\i\fs18 \tab SpriteEng.MoveSprite spritenumber, x, y
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\i\fs18 
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\fs18 \tab 
The First line sets the sprite up.  SpriteNumber is a number 1 thru 40 that you wish to affiliate the sprite to.  The Effected, and effect# are not yet implemented, but still need to be placed as a place marker.  Filename is the location of the bitmap wit
hout the extension.  The Width, and Hei
ght parameters are the height and width of the sprite.  Whichground sets the ground the sprite is displayed on... either the Background, Midground, or the foreground.  And Lastly Transparent color... hmmm... that sets the transparent color.. It's usually 
vbBlack.
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\fs18 \tab The Second line sets the sprite to visible, and the third moves it to a designated spot on the screen.  Easy huh?
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\fs18 
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\b\fs18 Routine Calls
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\fs18 \tab The following is a list of routine calls that effect the sprite properties.
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\i\fs18 
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\i Sub SetSpriteOrientation(spritenumber As Byte, Orient As Byte)
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\i \tab -}{Sets the orientation of a sprite currently only flipX works}{\i 
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\i Sub SetSpriteFrame(spritenumber As Byte, NewFrame As Byte)
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\i \tab -}{Sets and loads the new sprite frame}{\i 
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\i Sub ReloadSprite(spritenumber As Integer)
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\i \tab -}{Reloads the sprite bitmap
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\i Sub SetSprite(spritenumber As Integer, Effected As Boolean, EffectNumber As Byte, SpriteName As String, 
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\i SpriteWidth As Integer, SpriteHeight As Integer, SpriteGround As Byte, InvisibleColor As Long)
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\i \tab -}{Initializes a sprite by a file name}{\i 
\par Sub MoveSprite(spritenumber As Byte, spriteX As Integer, spriteY As Integer)
\par \tab -}{Moves sprite to the x,y coordinates told
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\i Sub SetSpriteVisibility(spritenumber As Integer, visible As Boolean)
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\i \tab -}{Sets whether or not the sprite is visible
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\i Sub SetSpriteScale(spritenumber As Byte, scalex As Integer, scaley As Integer)
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\tab -Sets the sprites scale, used to shrink or stretch a sprite}{\i 
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\i Sub SetSpriteNewGround(spritenumber As Integer, newground As Byte)
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\tab -Sets the sprite to a new ground}{\i 
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\i Function SpriteFrame(spritenumber As Integer) As Integer
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\tab -Returns the sprites frame
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\tab Those are the subs the deal with the sprites.
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\i 
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\b\i  }{\b How to use the TextGround
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\tab This is a little bit of a confusing subject or at least it is for me.  But let's give it a whirl.
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\i Setting The Background color}{:
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\tab use SetTextBkgColor
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\i Setting the Text color:
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\i \tab }{use SetTextColor
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\i Displaying Text:
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\i \tab }{DisplayText whereX, whereY, WhatTheTextIs, HowWideYouWantTheWholeThingToBe, \tab \tab HowTallYouWantTheWholeThingToBe
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\i Changing the Font:
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\tab use SetFont
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\tab Before text can be seen you must call setTextBkgColor, S
etTextColor, and DisplayText in that order.  However SetTextBkgColor, and SetTextColor may not need to be set.  For set font use the name of a font in Quotations. Eg: "Times New Roman".  And make sure you set Text visibility to true with the command SetTe
xtVisibility!
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\b How to Use the TextWindow
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\b \tab }{The text window perhaps is a little bit easier.  So let us take a look.
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\tab First things first you need to load the window you want.  Aka. the bitmap that's used as the background for the window.  You do this by calli
ng SetTextWindowByFileName.  Next you need to set the text window visibility to true and you do this by, yup you guessed it.. SetTextWindowVisibility.  After that to display a window use the command DisplayABox.  Again this has very explanitory variables 
in it's sub call so no explanation is needed.
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {
\par }\pard \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 {\b The engine is currently under construction.  There are a couple of things that need to be worked on but hey.  This is pretty good I think for someone's first glimps into directX}{.}{\i 

\par }}